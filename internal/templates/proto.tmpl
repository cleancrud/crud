syntax="proto3";

{{- $c:=ne .Protopkg ""}}
{{- if $c}}
package {{.Protopkg}};
{{- end}}
option go_package = "/api";
{{ $tableName := .GoTableName}}
import "google/protobuf/empty.proto";

service {{.GoTableName}}Service { 
    rpc Create{{.GoTableName}}({{.GoTableName}})returns({{.GoTableName}});
    rpc Delete{{.GoTableName}}({{.GoTableName}}{{.PrimaryKey.GoColumnName}})returns(google.protobuf.Empty);
    rpc Update{{.GoTableName}}(Update{{.GoTableName}}Req)returns({{.GoTableName}});
    rpc Get{{.GoTableName}}({{.GoTableName}}{{.PrimaryKey.GoColumnName}})returns({{.GoTableName}});
    rpc List{{.GoTableName}}s(List{{.GoTableName}}sReq)returns(List{{.GoTableName}}sResp);
}

message {{.GoTableName}} {

{{- range $index,$field := .Fields }}
    //{{$field.ColumnComment}}
  {{if $field.PostgresArray}} repeated {{end}}  {{$field.ProtoType }}	{{ $field.ColumnName }} = {{Incr $index}} ; {{- if ne $field.GoTags ""}} // @gotags: {{$field.GoTags}} {{- end}}
{{- end}}  
}

enum {{.GoTableName}}Field{
    {{$tableName}}_unknow = 0;
  {{- range $index,$field := .Fields }}
    {{$tableName}}_{{ $field.ColumnName }} = {{Incr $index}};
{{- end}}   
}

message {{.GoTableName}}{{.PrimaryKey.GoColumnName}}{
    {{.PrimaryKey.ProtoType}} {{.PrimaryKey.ColumnName}} = 1 ; 
}

message Update{{.GoTableName}}Req{
    {{.GoTableName}} {{.TableName}} = 1 ;
    repeated {{.GoTableName}}Field masks  = 2 ;
}


message List{{.GoTableName}}sReq{
    int32 page = 1 ;
    int32 page_size = 2 ;
    {{.GoTableName}}Field orderby = 3 ; 
    bool desc = 4; 
    repeated {{.GoTableName}}Filter filters = 5 ; 
    repeated {{.GoTableName}}Field fields = 6; 
}

message {{.GoTableName}}Filter{
     {{.GoTableName}}Field field = 1;
    string op = 2;
    string val = 3;
}

message List{{.GoTableName}}sResp{
    repeated {{.GoTableName}} {{.TableName}}s = 1 ; 
    int32 total_count = 2 ;   
    int32 page_count = 3 ; 
  }
